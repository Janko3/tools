version: "3.8"

services:

  lunar-gateway:
    image: lunar-gateway
    container_name: lunar-gateway
    build:
      context: ../lunar-gateway
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 5555:5555
    networks:
      - network
    depends_on:
      - magnetar
      - oort
      - iam-service
      - kuiper

  magnetar:
    build:
      context: ..
      dockerfile: magnetar/Dockerfile
    image: magnetar
    container_name: magnetar
    hostname: ${MAGNETAR_HOSTNAME}
    restart: on-failure
    expose:
      - ${MAGNETAR_PORT}
    ports:
      - ${MAGNETAR_PORT}:${MAGNETAR_PORT}
    environment:
      - NATS_ADDRESS=${NATS_HOSTNAME}:${NATS_PORT}
      - ETCD_ADDRESS=${ETCD_HOSTNAME}:${ETCD_PORT}
      - MAGNETAR_ADDRESS=:${MAGNETAR_PORT}
      - OORT_ADDRESS=${OORT_HOSTNAME}:${OORT_PORT}
      - APOLLO_ADDRESS=${IAM_HOSTNAME}:${IAM_PORT}
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - network
    depends_on:
      - nats
      - etcd

  oort:
    build:
      context: ..
      dockerfile: oort/Dockerfile
    image: oort
    container_name: oort
    hostname: ${OORT_HOSTNAME}
    expose:
      - ${OORT_PORT}
    ports:
      - ${OORT_PORT}:${OORT_PORT}
    environment:
      - OORT_PORT=${OORT_PORT}
      - NEO4J_HOSTNAME=${NEO4J_HOSTNAME}
      - NEO4J_BOLT_PORT=${NEO4J_BOLT_PORT}
      - NEO4J_DBNAME=${NEO4J_DBNAME}
      - NATS_HOSTNAME=${NATS_HOSTNAME}
      - NATS_PORT=${NATS_PORT}
    networks:
      - network
    depends_on:
      - neo4j
      - nats

  kuiper:
    build:
      context: ..
      dockerfile: kuiper/Dockerfile
    image: kuiper
    container_name: kuiper
    hostname: ${KUIPER_HOSTNAME}
    expose:
      - ${KUIPER_PORT}
    ports:
      - ${KUIPER_PORT}:${KUIPER_PORT}
    environment:
      - KUIPER_ADDRESS=:${KUIPER_PORT}
      - OORT_ADDRESS=${OORT_HOSTNAME}:${OORT_PORT}
      - MAGNETAR_ADDRESS=${MAGNETAR_HOSTNAME}:${MAGNETAR_PORT}
      - NATS_ADDRESS=${NATS_HOSTNAME}:${NATS_PORT}
      - STAR_HTTP_ADDRESS=${STAR_HOSTNAME}:${STAR_HTTP_PORT}
      - AGENT_QUEUE_ADDRESS=${AGENT_QUEUE_HOSTNAME}:${AGENT_QUEUE_PORT}
      - APOLLO_ADDRESS=${IAM_HOSTNAME}:${IAM_PORT}
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - network
    depends_on:
      - nats
      - agent_queue

  agent_queue:
    build:
      context: ../gravity
      dockerfile: Dockerfile
      args:
        - GRPC_PORT=${AGENT_QUEUE_PORT}
    image: agent_queue
    container_name: agent_queue
    restart: always
    networks:
      - network
    ports:
      - ${AGENT_QUEUE_PORT}:${AGENT_QUEUE_PORT}
    environment:
      GRPC_PORT: ${AGENT_QUEUE_PORT}
      NATS_CONN_ADDRESS: ${NATS_HOSTNAME}:${NATS_PORT}
    depends_on:
      - nats

  iam-service:
    build:
      context: ..
      dockerfile: iam-service/iam-service/Dockerfile
    image: iam-service
    container_name: iam-service
    hostname: ${IAM_HOSTNAME}
    restart: on-failure
    expose:
      - ${IAM_PORT}
    ports:
      - ${IAM_PORT}:${IAM_PORT}
    environment:
      - IAM_ADDRESS=:${IAM_PORT}
      - OORT_ADDRESS=${OORT_HOSTNAME}:${OORT_PORT}
      - MAGNETAR_ADDRESS=${MAGNETAR_HOSTNAME}:${MAGNETAR_PORT}
      - NATS_HOSTNAME=${NATS_HOSTNAME}
      - NATS_PORT=${NATS_PORT}
      - NEO4J_HOSTNAME=${NEO4J_HOSTNAME}
      - NEO4J_BOLT_PORT=${NEO4J_BOLT_PORT}
      - NEO4J_DBNAME=${NEO4J_DBNAME}
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - network
    depends_on:
      nats:
        condition: service_started
      vault:
        condition: service_started
      cassandra:
        condition: service_healthy

  vault:
    build:
      context: ..
      dockerfile: tools/vault/Dockerfile
    container_name: vault
    hostname: ${VAULT_HOSTNAME}
    restart: on-failure
    expose:
      - ${VAULT_HTTP_PORT}
    ports:
      - ${VAULT_HTTP_PORT}:${VAULT_HTTP_PORT}
    environment:
      - VAULT_ADDR=${VAULT_ADDR}:${VAULT_HTTP_PORT}
      - VAULT_API_ADDR=${VAULT_ADDR}:${VAULT_HTTP_PORT}
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json 
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 5s
      timeout: 2s
      retries: 10
    networks:
      - network

  neo4j:
    image: neo4j:4.4.12
    container_name: neo4j
    hostname: ${NEO4J_HOSTNAME}
    restart: on-failure
    expose:
      - ${NEO4J_HTTP_PORT}
      - ${NEO4J_BOLT_PORT}
    ports:
      - ${NEO4J_HTTP_PORT}:${NEO4J_HTTP_PORT}
      - ${NEO4J_BOLT_PORT}:${NEO4J_BOLT_PORT}
    environment:
      - NEO4J_apoc_export_file_enabled=${NEO4J_apoc_export_file_enabled}
      - NEO4J_apoc_import_file_enabled=${NEO4J_apoc_import_file_enabled}
      - NEO4J_apoc_import_file_use__neo4j__config=${NEO4J_apoc_import_file_use__neo4j__config}
      - NEO4JLABS_PLUGINS=${NEO4J_PLUGINS}
      - NEO4J_dbms_connector_bolt_listen__address=:${NEO4J_BOLT_PORT}
      - NEO4J_dbms_connector_http_listen__address=:${NEO4J_HTTP_PORT}
      - NEO4J_dbms_security_auth__enabled=${NEO4J_AUTH_ENABLED}
    networks:
      - network
    volumes:
      - neo4jdata:/data
      - neo4jlogs:/logs

  nats:
    image: nats:latest
    container_name: nats
    expose:
      - ${NATS_PORT}
    ports:
      - ${NATS_PORT}:${NATS_PORT}
      - 8222:8222
    volumes:
      - ./nats.conf:/etc/nats/nats-server.conf
    hostname: ${NATS_HOSTNAME}
    restart: on-failure
    networks:
      - network

  etcd:
    image: 'bitnami/etcd:latest'
    container_name: etcd
    hostname: ${ETCD_HOSTNAME}
    expose:
      - ${ETCD_PORT}
    ports:
      - ${ETCD_PORT}:${ETCD_PORT}
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://${ETCD_HOSTNAME}:${ETCD_PORT}
    volumes:
      - etcd_data:/bitnami/etcd
    networks:
      - network

  cassandra:
    build:
      context: ..
      dockerfile: tools/cassandra/Dockerfile
    container_name: cassandra
    restart: always
    hostname: ${CASSANDRA_HOSTNAME}
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe cluster'"]
      interval: 15s
      timeout: 10s
      retries: 10
    networks:
      - network
  
  lunar-gateway:
    image: lunar-gateway
    container_name: lunar-gateway
    build:
      context: ..
      dockerfile: ./lunar-gateway/Dockerfile
    restart: on-failure
    ports:
      - 5555:5555
    networks:
      - network
    depends_on:
      - magnetar
      - oort
      - iam-service
      - kuiper

networks:
  network:
    driver: bridge

volumes:
  neo4jdata:
    driver: local
  neo4jlogs:
    driver: local
  etcd_data:
    driver: local
  cassandra_data:
    driver: local
  vault_data:
    driver: local
